module either {
  type Either<e,a>
    = Left(e)
    | Right(a)


  export function isLeft<e,a>(either: Either(e, a)) -> Boolean {
    case either { Right(_) -> False, Left(_) -> True }
  } 
}

function main() -> Int32 { 
  if either:isLeft(either:Right((True, False))) then 1 else 2
}
