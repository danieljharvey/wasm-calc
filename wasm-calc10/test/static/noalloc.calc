function [noglobalmutate noallocate noimports] add(
  a: Int8, b: Int8
) -> Int8 { a + b}

function id<a>(a: a) -> a { a}

export function test(index: Int8) -> Int8 { 
  let a: Box(Int8) = Box(1); 
  let b: Box(Int8) = Box(2); 
  let (Box(c),Box(d)) = (id(a),id(b)); 
  add(c, d)
}

function patternMatch(
  tuple: (Boolean,Boolean,Int8)
) -> Int8 { 
  case tuple {
    (True,False,c) -> { c }, 
    (False,True,c) -> { 1 - c }, 
    _ -> 0 
  }
}