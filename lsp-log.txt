
textDocumentDidOpen
TNotificationMessage {_jsonrpc = "2.0", _method = SMethod_TextDocumentDidOpen, _params = DidOpenTextDocumentParams {_textDocument = TextDocumentItem {_uri = Uri {getUri = "file:///Users/danielharvey/Git/wasm-calc/wasm-calc11/demo/draw.calc"}, _languageId = LanguageKind_Custom "calc", _version = 0, _text = "global mut index: Int64 = 1\n\ntype Color = Greyscale(Int64) | RGB(Int64, Int64, Int64)\n\nimport imports.draw as draw(\n  x: Int64, y: Int64, r: Int64, g: Int64, b: Int64\n) -> Void\n\nfunction min(floor: Int64, value: Int64) -> Int64 { \n  if value > floor then value else floor\n}\n\nfunction max(ceiling: Int64, value: Int64) -> Int64 { \n  if value < ceiling then value else ceiling\n}\n\nfunction clamp(\n  floor: Int64, ceiling: Int64, value: Int64\n) -> Int64 { min(floor, max(ceiling, value))}\n\nfunction drawBounded(\n  x: Int64, y: Int64, color: Color\n) -> Color { \n  let maxWidth: Int64 = 600; \n  let maxHeight: Int64 = 600; \n  let (r, g, b) = case color {\n    RGB(r, g, b) -> (r, g, b), \n    Greyscale(grey) -> (grey, grey, grey) \n  }; \n  draw(\n    clamp(0, maxWidth, x), clamp(0, maxHeight, y), r, g, b\n  ); \n  RGB(r, g, b)\n}\n\nfunction cycle(color: Color) -> Color { \n  case color {\n    RGB(r, g, b) -> RGB(g, b, r), \n    Greyscale(grey) -> Greyscale(grey) \n  }\n}\n\nfunction initial(index: Int64) -> Color { \n  let r = clamp(0, 255, index * 2); \n  let g = clamp(0, 255, 255 - r); \n  let b = clamp(0, 255, r * 3); \n  RGB(r, g, b)\n}\n\nexport function test() -> Void { \n  let color = drawBounded(\n    index * 2, index * 3, initial(index)\n  ); \n  let color2 = drawBounded(\n    100 - index, index * 3, cycle(color)\n  ); \n  let color3 = drawBounded(\n    10 + index * 3, 50 - index * 2, cycle(color2)\n  ); \n  drawBounded(index * 4, 200 - index * 3, cycle(color3)); \n  if index < 200 then\n    set(index,  index + 1)\n  else\n    set(index,  0)\n}"}}}
TNotificationMessage {_jsonrpc = "2.0", _method = SMethod_Initialized, _params = InitializedParams}
workspaceFolders []
textDocumentDidOpen
TNotificationMessage {_jsonrpc = "2.0", _method = SMethod_TextDocumentDidOpen, _params = DidOpenTextDocumentParams {_textDocument = TextDocumentItem {_uri = Uri {getUri = "file:///Users/danielharvey/Git/wasm-calc/wasm-calc11/demo/draw.calc"}, _languageId = LanguageKind_Custom "calc", _version = 0, _text = "global mut index: Int64 = 1\n\ntype Color = Greyscale(Int64) | RGB(Int64, Int64, Int64)\n\nimport imports.draw as draw(\n  x: Int64, y: Int64, r: Int64, g: Int64, b: Int64\n) -> Void\n\nfunction min(floor: Int64, value: Int64) -> Int64 { \n  if value > floor then value else floor\n}\n\nfunction max(ceiling: Int64, value: Int64) -> Int64 { \n  if value < ceiling then value else ceiling\n}\n\nfunction clamp(\n  floor: Int64, ceiling: Int64, value: Int64\n) -> Int64 { min(floor, max(ceiling, value))}\n\nfunction drawBounded(\n  x: Int64, y: Int64, color: Color\n) -> Color { \n  let maxWidth: Int64 = 600; \n  let maxHeight: Int64 = 600; \n  let (r, g, b) = case color {\n    RGB(r, g, b) -> (r, g, b), \n    Greyscale(grey) -> (grey, grey, grey) \n  }; \n  draw(\n    clamp(0, maxWidth, x), clamp(0, maxHeight, y), r, g, b\n  ); \n  RGB(r, g, b)\n}\n\nfunction cycle(color: Color) -> Color { \n  case color {\n    RGB(r, g, b) -> RGB(g, b, r), \n    Greyscale(grey) -> Greyscale(grey) \n  }\n}\n\nfunction initial(index: Int64) -> Color { \n  let r = clamp(0, 255, index * 2); \n  let g = clamp(0, 255, 255 - r); \n  let b = clamp(0, 255, r * 3); \n  RGB(r, g, b)\n}\n\nexport function test() -> Void { \n  let color = drawBounded(\n    index * 2, index * 3, initial(index)\n  ); \n  let color2 = drawBounded(\n    100 - index, index * 3, cycle(color)\n  ); \n  let color3 = drawBounded(\n    10 + index * 3, 50 - index * 2, cycle(color2)\n  ); \n  drawBounded(index * 4, 200 - index * 3, cycle(color3)); \n  if index < 200 then\n    set(index,  index + 1)\n  else\n    set(index,  0)\n}"}}}
TNotificationMessage {_jsonrpc = "2.0", _method = SMethod_Initialized, _params = InitializedParams}
workspaceFolders []
textDocumentDidOpen
TNotificationMessage {_jsonrpc = "2.0", _method = SMethod_TextDocumentDidOpen, _params = DidOpenTextDocumentParams {_textDocument = TextDocumentItem {_uri = Uri {getUri = "file:///Users/danielharvey/Git/wasm-calc/wasm-calc11/demo/draw.calc"}, _languageId = LanguageKind_Custom "calc", _version = 0, _text = "global mut index: Int64 = 1\n\ntype Color = Greyscale(Int64) | RGB(Int64, Int64, Int64)\n\nimport imports.draw as draw(\n  x: Int64, y: Int64, r: Int64, g: Int64, b: Int64\n) -> Void\n\nfunction min(floor: Int64, value: Int64) -> Int64 { \n  if value > floor then value else floor\n}\n\nfunction max(ceiling: Int64, value: Int64) -> Int64 { \n  if value < ceiling then value else ceiling\n}\n\nfunction clamp(\n  floor: Int64, ceiling: Int64, value: Int64\n) -> Int64 { min(floor, max(ceiling, value))}\n\nfunction drawBounded(\n  x: Int64, y: Int64, color: Color\n) -> Color { \n  let maxWidth: Int64 = 600; \n  let maxHeight: Int64 = 600; \n  let (r, g, b) = case color {\n    RGB(r, g, b) -> (r, g, b), \n    Greyscale(grey) -> (grey, grey, grey) \n  }; \n  draw(\n    clamp(0, maxWidth, x), clamp(0, maxHeight, y), r, g, b\n  ); \n  RGB(r, g, b)\n}\n\nfunction cycle(color: Color) -> Color { \n  case color {\n    RGB(r, g, b) -> RGB(g, b, r), \n    Greyscale(grey) -> Greyscale(grey) \n  }\n}\n\nfunction initial(index: Int64) -> Color { \n  let r = clamp(0, 255, index * 2); \n  let g = clamp(0, 255, 255 - r); \n  let b = clamp(0, 255, r * 3); \n  RGB(r, g, b)\n}\n\nexport function test() -> Void { \n  let color = drawBounded(\n    index * 2, index * 3, initial(index)\n  ); \n  let color2 = drawBounded(\n    100 - index, index * 3, cycle(color)\n  ); \n  let color3 = drawBounded(\n    10 + index * 3, 50 - index * 2, cycle(color2)\n  ); \n  drawBounded(index * 4, 200 - index * 3, cycle(color3)); \n  if index < 200 then\n    set(index, index + 1)\n  else\n    set(index, 0)\n}"}}}